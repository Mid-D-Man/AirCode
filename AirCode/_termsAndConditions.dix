@CONFIG(
    version -> "1.0",
    encoding -> "UTF-8",
    author -> "Mid-D-Man",
    created -> "2025-09-01"
)

@ENUMS(
    LiabilityLevel {
        NONE = 0,
        LIMITED = 1,
        FULL = 2
    },
    
    UsageRights {
        FORBIDDEN = 0,
        RESTRICTED = 1,
        ALLOWED = 2,
        REQUIRED = 3
    }
)

@DATA(
    root = {
        project_nature = {
            type = "School Project",
            institution_specific = true,
            educational_purpose = true,
            open_source_license = "MIT License"
        },
        
        credential_restrictions = {
            default_configs_prohibited = {
                appsettings_json = "STRICTLY PROHIBITED - Belongs to our organization",
                firebase_config = "STRICTLY PROHIBITED - Belongs to our school only",
                auth0_credentials = "RESTRICTED - Create your own Auth0 tenant",
                supabase_credentials = "RESTRICTED - Create your own Supabase project",
                authorized_domains = "Only our educational institution is authorized"
            },
            
            required_actions = {
                create_own_auth0 = "You MUST create your own Auth0 tenant",
                create_own_firebase = "You MUST create your own Firebase project", 
                create_own_supabase = "You MUST create your own Supabase project",
                update_all_configs = "Replace ALL default configurations with your own"
            }
        },
        
        usage_rights = {
            repository_access = {
                cloning = "Allowed under MIT License",
                forking = "Allowed under MIT License", 
                modification = "Allowed under MIT License",
                distribution = "Allowed under MIT License",
                commercial_use = "Allowed under MIT License"
            },
            
            restrictions = {
                default_credentials = "NEVER use our default credentials",
                unauthorized_access = "Do not attempt to access our services",
                impersonation = "Do not impersonate our institution"
            }
        },
        
        liability_disclaimer = {
            no_warranty = "Software provided AS-IS without any warranty",
            no_liability = "Authors not liable for any damages, issues, or consequences",
            use_at_own_risk = "You assume all risks when using this software",
            security_responsibility = "You are responsible for implementing proper security",
            data_protection = "You are responsible for protecting your data"
        },
        
        security_important_notice = {
            client_side_limitation = "Client-side security is just extra defense layer",
            real_security_backend = "REAL security happens at the backend/server",
            no_backend_provided = "We deliberately did NOT provide backend code",
            your_responsibility = "YOU must implement secure backend yourself",
            read_documentation = "READ the README.md to understand requirements",
            understand_architecture = "Understand the security architecture before implementation"
        },
        
        backend_implementation = {
            firebase_rules = "You must implement proper Firestore security rules",
            auth0_configuration = "You must configure Auth0 properly with actions and rules",
            supabase_policies = "You must implement Row Level Security policies",
            api_security = "You must secure all API endpoints properly",
            data_validation = "You must implement server-side data validation"
        },
        
        educational_context = {
            built_for_school = "This project was built for a specific educational institution",
            institutional_features = "Some features may be specific to our school's requirements",
            adaptation_required = "You may need to adapt features for your use case",
            documentation_available = "Refer to provided documentation for customization guidance"
        },
        
        legal_compliance = {
            mit_license_terms = "All usage subject to MIT License terms",
            copyright_notice = "Copyright notice must be preserved",
            license_inclusion = "LICENSE file must be included in distributions",
            local_laws = "Users must comply with their local laws and regulations"
        },
        
        support_and_maintenance = {
            no_support_guaranteed = "No official support or maintenance guaranteed",
            community_driven = "Support may be community-driven",
            development_status = "Project is under active development",
            breaking_changes = "Breaking changes may occur during development"
        },
        
        final_warning = {
            read_everything = "READ ALL DOCUMENTATION BEFORE USE",
            test_thoroughly = "TEST THOROUGHLY in development environment",
            security_audit = "Perform security audit before production use",
            backup_data = "Always backup your data",
            monitor_usage = "Monitor application usage and performance"
        }
    }
)
