@CONFIG(
    version -> "1.0",
    encoding -> "UTF-8", 
    author -> "Mid-D-Man",
    created -> "2025-09-01"
)

@ENUMS(
    UsageType {
        PROHIBITED = 0,
        RESTRICTED = 1,
        ALLOWED = 2,
        ENCOURAGED = 3
    },
    
    ViolationSeverity {
        LOW = 1,
        MEDIUM = 2,
        HIGH = 3,
        CRITICAL = 4
    }
)

@DATA(
    root = {
        acceptable_uses = {
            educational_purposes = {
                usage_type = "ENCOURAGED",
                description = "Using for legitimate educational attendance tracking",
                examples = [
                    "University course attendance",
                    "School event check-ins", 
                    "Educational institution management",
                    "Student attendance analytics"
                ]
            },
            
            research_development = {
                usage_type = "ALLOWED",
                description = "Academic research and development",
                examples = [
                    "Computer science research projects",
                    "Security research and analysis",
                    "Software engineering studies",
                    "Open source contributions"
                ]
            },
            
            legitimate_business = {
                usage_type = "ALLOWED", 
                description = "Legitimate business attendance tracking",
                examples = [
                    "Corporate training attendance",
                    "Conference check-ins",
                    "Workshop management",
                    "Event organization"
                ]
            },
            
            personal_learning = {
                usage_type = "ENCOURAGED",
                description = "Learning software development and security",
                examples = [
                    "Understanding Blazor WebAssembly",
                    "Learning authentication patterns",
                    "Studying security implementations",
                    "Architecture analysis"
                ]
            }
        },
        
        prohibited_uses = {
            credential_theft = {
                violation_severity = "CRITICAL",
                description = "Using or attempting to use default credentials",
                examples = [
                    "Using our Auth0 tenant without permission",
                    "Accessing our Firebase project",
                    "Using our Supabase instance", 
                    "Attempting to access our systems"
                ]
            },
            
            malicious_activities = {
                violation_severity = "CRITICAL",
                description = "Any malicious or harmful activities",
                examples = [
                    "Attendance fraud or manipulation",
                    "Unauthorized data access",
                    "System penetration testing without permission",
                    "Denial of service attacks"
                ]
            },
            
            privacy_violations = {
                violation_severity = "HIGH",
                description = "Violating user privacy or data protection",
                examples = [
                    "Unauthorized data collection",
                    "Sharing personal information without consent",
                    "Bypassing security measures",
                    "Data harvesting"
                ]
            },
            
            commercial_exploitation = {
                violation_severity = "MEDIUM",
                description = "Unauthorized commercial use of our specific implementation",
                examples = [
                    "Selling access to our systems",
                    "Using our branding without permission",
                    "Claiming ownership of our specific configurations",
                    "Reselling our credentials"
                ]
            },
            
            legal_violations = {
                violation_severity = "CRITICAL",
                description = "Any illegal activities or law violations",
                examples = [
                    "Copyright infringement",
                    "Trademark violations", 
                    "Privacy law violations",
                    "Computer fraud and abuse"
                ]
            }
        },
        
        security_requirements = {
            own_infrastructure = {
                required = true,
                description = "You MUST use your own service accounts",
                requirements = [
                    "Create your own Auth0 tenant",
                    "Set up your own Firebase project",
                    "Configure your own Supabase instance",
                    "Implement proper security rules"
                ]
            },
            
            data_protection = {
                required = true,
                description = "Protect user data and privacy",
                requirements = [
                    "Implement proper encryption",
                    "Follow data protection regulations",
                    "Secure data transmission",
                    "Protect against unauthorized access"
                ]
            },
            
            security_testing = {
                allowed_scope = "Your own infrastructure only",
                description = "Security testing guidelines",
                requirements = [
                    "Test only on your own systems",
                    "Do not test on our production systems",
                    "Follow responsible disclosure",
                    "Respect rate limits and resources"
                ]
            }
        },
        
        development_guidelines = {
            code_contributions = {
                encouraged = true,
                description = "Contributing to the open source project",
                guidelines = [
                    "Follow existing code patterns",
                    "Maintain security focus",
                    "Document your changes",
                    "Test thoroughly before submitting"
                ]
            },
            
            bug_reporting = {
                encouraged = true,
                description = "Report bugs and issues responsibly",
                guidelines = [
                    "Use GitHub issues for bug reports",
                    "Provide detailed reproduction steps",
                    "Do not report security issues publicly",
                    "Follow responsible disclosure for security bugs"
                ]
            },
            
            feature_requests = {
                allowed = true,
                description = "Suggesting new features",
                guidelines = [
                    "Check existing issues first",
                    "Provide clear use case",
                    "Consider security implications",
                    "Respect project scope and goals"
                ]
            }
        },
        
        compliance_monitoring = {
            violation_detection = {
                automated_monitoring = "May be implemented",
                manual_review = "Will be conducted as needed",
                reporting_mechanism = "GitHub issues and direct contact"
            },
            
            enforcement_actions = {
                warnings = "First offense may result in warning",
                access_restriction = "Repeated violations may result in access restrictions",
                legal_action = "Serious violations may result in legal action",
                permanent_ban = "Critical violations may result in permanent exclusion"
            }
        },
        
        contact_information = {
            security_issues = "Use GitHub security advisories",
            general_questions = "Use GitHub issues",
            legal_concerns = "Contact through GitHub profile",
            abuse_reports = "Report through appropriate channels"
        },
        
        policy_updates = {
            change_notification = "Policy changes will be communicated through repository",
            effective_date = "Changes effective immediately upon commit",
            version_control = "All versions maintained in repository history",
            acceptance = "Continued use implies acceptance of updated terms"
        }
    }
)
