@page "/Admin/Reports"
@using AirCode.Domain.Enums
@using AirCode.Layout.FullScreen
@inherits Microsoft.AspNetCore.Components.ComponentBase
@inject IJSRuntime JSRuntime
@layout FullScreenLayout

<div class="reports-container">
    <div class="header-section">
        <div class="header-content">
            <h1 class="page-title">
                <i class="bi bi-graph-up-arrow me-2"></i>
                Attendance Reports
            </h1>
            <p class="page-description">Generate comprehensive attendance reports by selecting a level and course</p>
        </div>
    </div>

    <!-- Filter Section -->
    <div class="filter-section">
        <div class="filter-header">
            <h2 class="filter-title">
                <i class="bi bi-funnel me-2"></i>
                Report Filters
            </h2>
        </div>
        
        <div class="filter-content">
            <div class="filter-row">
                <div class="form-group">
                    <label for="levelSelect" class="form-label">
                        <i class="bi bi-layers me-1"></i>
                        Academic Level
                    </label>
                    <select id="levelSelect" class="form-select" @onchange="OnLevelChanged" disabled="@isLoading">
                        @foreach (var level in Enum.GetValues<LevelType>())
                        {
                            <option value="@level" selected="@(selectedLevel == level)">@level</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <label for="courseSelect" class="form-label">
                        <i class="bi bi-book me-1"></i>
                        Course Selection
                    </label>
                    <select id="courseSelect" class="form-select" @onchange="OnCourseChanged" disabled="@(isLoading || !filteredCourses.Any())">
                        <option value="">-- Select a Course --</option>
                        @foreach (var course in filteredCourses)
                        {
                            <option value="@course.CourseCode" selected="@(selectedCourseCode == course.CourseCode)">
                                @course.CourseCode - @course.Name
                            </option>
                        }
                    </select>
                    @if (!filteredCourses.Any() && !isLoading)
                    {
                        <small class="help-text">No courses available for selected level</small>
                    }
                </div>

                <div class="form-group generate-group">
                    <button class="btn btn-primary btn-generate" @onclick="GenerateReportAsync" disabled="@(isLoading || string.IsNullOrEmpty(selectedCourseCode))">
                        @if (isLoading && showReport)
                        {
                            <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                            <span>Generating Report...</span>
                        }
                        else if (isLoading)
                        {
                            <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                            <span>Loading Courses...</span>
                        }
                        else
                        {
                            <i class="bi bi-file-earmark-bar-graph me-2"></i>
                            <span>Generate Report</span>
                        }
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Error Display -->
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger" role="alert">
            <div class="alert-content">
                <i class="bi bi-exclamation-triangle-fill alert-icon"></i>
                <div class="alert-body">
                    <strong>Error:</strong>
                    <span>@errorMessage</span>
                </div>
                <button type="button" class="btn-close" @onclick="ClearError" aria-label="Close"></button>
            </div>
        </div>
    }

    <!-- Loading State for Initial Load -->
    @if (isLoading && !showReport && string.IsNullOrEmpty(errorMessage))
    {
        <div class="loading-section">
            <div class="loading-content">
                <div class="spinner-border text-primary loading-spinner" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <div class="loading-text">
                    <h4>@(filteredCourses.Any() ? "Generating attendance report..." : "Loading available courses...")</h4>
                    <p>Please wait while we process your request</p>
                </div>
            </div>
        </div>
    }

    <!-- Report Display -->
    @if (showReport && currentReport != null)
    {
        <div class="report-section">
            <!-- Report Header -->
            <div class="report-header">
                <div class="report-title-section">
                    <h2 class="report-title">
                        <i class="bi bi-file-earmark-text me-2"></i>
                        Attendance Report
                    </h2>
                    <div class="report-subtitle">
                        <span class="course-code">@currentReport.CourseCode</span>
                        <span class="level-badge">@currentReport.CourseLevel</span>
                        <span class="generated-time">Generated: @currentReport.GeneratedAt.ToString("MMM dd, yyyy HH:mm")</span>
                    </div>
                </div>
                <div class="report-actions">
                    <button class="btn btn-outline-secondary btn-action" @onclick="ClearReport">
                        <i class="bi bi-arrow-clockwise me-1"></i>
                        <span class="btn-text">New Report</span>
                    </button>
                    <button class="btn btn-success btn-action" @onclick="ExportReportAsync" disabled="@isLoading">
                        @if (isLoading)
                        {
                            <span class="spinner-border spinner-border-sm me-1" role="status"></span>
                            <span class="btn-text">Exporting...</span>
                        }
                        else
                        {
                            <i class="bi bi-download me-1"></i>
                            <span class="btn-text">Export PDF</span>
                        }
                    </button>
                </div>
            </div>

            <!-- Report Summary -->
            <div class="report-summary">
                <div class="summary-header">
                    <h3>
                        <i class="bi bi-bar-chart me-2"></i>
                        Report Summary
                    </h3>
                </div>
                <div class="summary-grid">
                    <div class="summary-card primary">
                        <div class="card-icon">
                            <i class="bi bi-people-fill"></i>
                        </div>
                        <div class="card-content">
                            <div class="summary-value">@currentReport.TotalStudentsEnrolled</div>
                            <div class="summary-label">Total Students</div>
                        </div>
                    </div>
                    <div class="summary-card info">
                        <div class="card-icon">
                            <i class="bi bi-calendar-check"></i>
                        </div>
                        <div class="card-content">
                            <div class="summary-value">@currentReport.TotalSessions</div>
                            <div class="summary-label">Total Sessions</div>
                        </div>
                    </div>
                    <div class="summary-card success">
                        <div class="card-icon">
                            <i class="bi bi-percent"></i>
                        </div>
                        <div class="card-content">
                            <div class="summary-value">@currentReport.AverageAttendancePercentage%</div>
                            <div class="summary-label">Average Attendance</div>
                        </div>
                    </div>
                    <div class="summary-card warning">
                        <div class="card-icon">
                            <i class="bi bi-star-fill"></i>
                        </div>
                        <div class="card-content">
                            <div class="summary-value">@currentReport.StudentsWithPerfectAttendance</div>
                            <div class="summary-label">Perfect Attendance</div>
                        </div>
                    </div>
                    <div class="summary-card danger">
                        <div class="card-icon">
                            <i class="bi bi-exclamation-triangle"></i>
                        </div>
                        <div class="card-content">
                            <div class="summary-value">@currentReport.StudentsWithPoorAttendance</div>
                            <div class="summary-label">Poor Attendance (&lt;75%)</div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Student Details Table -->
            <div class="student-details">
                <div class="details-header">
                    <h3>
                        <i class="bi bi-table me-2"></i>
                        Student Attendance Details
                    </h3>
                    <div class="table-info">
                        <span>@currentReport.StudentReports.Count students enrolled</span>
                    </div>
                </div>
                
                <div class="table-container">
                    <div class="table-responsive">
                        <table class="table table-modern">
                            <thead class="table-header">
                                <tr>
                                    <th scope="col">
                                        <i class="bi bi-person-badge me-1"></i>
                                        Matric Number
                                    </th>
                                    <th scope="col">
                                        <i class="bi bi-layers me-1"></i>
                                        Level
                                    </th>
                                    <th scope="col" class="text-center">
                                        <i class="bi bi-check-circle me-1"></i>
                                        Present
                                    </th>
                                    <th scope="col" class="text-center">
                                        <i class="bi bi-x-circle me-1"></i>
                                        Absent
                                    </th>
                                    <th scope="col" class="text-center">
                                        <i class="bi bi-percent me-1"></i>
                                        Attendance %
                                    </th>
                                    <th scope="col" class="text-center">
                                        <i class="bi bi-award me-1"></i>
                                        Status
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var student in currentReport.StudentReports.OrderBy(s => s.MatricNumber))
                                {
                                    <tr class="student-row">
                                        <td class="matric-cell">
                                            <strong>@student.MatricNumber</strong>
                                        </td>
                                        <td>
                                            <span class="level-badge @GetLevelClass(student.StudentLevel)">
                                                @student.StudentLevel
                                            </span>
                                        </td>
                                        <td class="text-center">
                                            <span class="attendance-badge present">
                                                @student.TotalPresent
                                            </span>
                                        </td>
                                        <td class="text-center">
                                            <span class="attendance-badge absent">
                                                @student.TotalAbsent
                                            </span>
                                        </td>
                                        <td class="text-center">
                                            <span class="percentage-badge @GetAttendancePerformanceClass(student.AttendancePercentage)">
                                                @student.AttendancePercentage%
                                            </span>
                                        </td>
                                        <td class="text-center">
                                            @if (student.AttendancePercentage >= 90)
                                            {
                                                <span class="status-badge excellent">
                                                    <i class="bi bi-star-fill me-1"></i>
                                                    Excellent
                                                </span>
                                            }
                                            else if (student.AttendancePercentage >= 75)
                                            {
                                                <span class="status-badge good">
                                                    <i class="bi bi-check-circle me-1"></i>
                                                    Good
                                                </span>
                                            }
                                            else if (student.AttendancePercentage >= 50)
                                            {
                                                <span class="status-badge poor">
                                                    <i class="bi bi-exclamation-triangle me-1"></i>
                                                    Poor
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="status-badge critical">
                                                    <i class="bi bi-x-octagon me-1"></i>
                                                    Critical
                                                </span>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Raw JSON Output -->
            <div class="json-section">
                <div class="json-header">
                    <h3>
                        <i class="bi bi-code-square me-2"></i>
                        Raw Report Data
                    </h3>
                    <button class="btn btn-outline-primary btn-sm" @onclick="CopyJsonToClipboard">
                        <i class="bi bi-clipboard me-1"></i>
                        Copy JSON
                    </button>
                </div>
                <div class="json-container">
                    <pre class="json-content">@reportJson</pre>
                </div>
            </div>
        </div>
    }
</div>

@code {
  

    private async Task CopyJsonToClipboard()
    {
        try
        {
            await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", reportJson);
        }
        catch (Exception ex)
        {
            errorMessage = $"Failed to copy to clipboard: {ex.Message}";
        }
    }

}