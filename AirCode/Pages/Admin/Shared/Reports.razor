@page "/Admin/Reports"
@using AirCode.Domain.Enums
@inherits Microsoft.AspNetCore.Components.ComponentBase
@inject IJSRuntime JSRuntime

<div class="reports-container">
    <div class="header-section">
        <h3 class="page-title">Attendance Reports</h3>
        <p class="page-description">Generate detailed attendance reports by selecting a level and course</p>
    </div>

    <!-- Filter Section -->
    <div class="filter-section">
        <div class="filter-row">
            <div class="form-group">
                <label for="levelSelect" class="form-label">Select Level:</label>
                <select id="levelSelect" class="form-select" @onchange="OnLevelChanged" disabled="@isLoading">
                    @foreach (var level in Enum.GetValues<LevelType>())
                    {
                        <option value="@level" selected="@(selectedLevel == level)">@level</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label for="courseSelect" class="form-label">Select Course:</label>
                <select id="courseSelect" class="form-select" @onchange="OnCourseChanged" disabled="@(isLoading || !filteredCourses.Any())">
                    <option value="">-- Select a Course --</option>
                    @foreach (var course in filteredCourses)
                    {
                        <option value="@course.CourseCode" selected="@(selectedCourseCode == course.CourseCode)">
                            @course.CourseCode - @course.Name
                        </option>
                    }
                </select>
                @if (!filteredCourses.Any() && !isLoading)
                {
                    <small class="text-muted">No courses available for selected level</small>
                }
            </div>

            <div class="form-group">
                <button class="btn btn-primary" @onclick="GenerateReportAsync" disabled="@(isLoading || string.IsNullOrEmpty(selectedCourseCode))">
                    @if (isLoading)
                    {
                        <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                        <span>Generating...</span>
                    }
                    else
                    {
                        <span>Generate Report</span>
                    }
                </button>
            </div>
        </div>
    </div>

    <!-- Error Display -->
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            @errorMessage
        </div>
    }

    <!-- Report Display -->
    @if (showReport && currentReport != null)
    {
        <div class="report-section">
            <div class="report-header">
                <h4>Attendance Report: @currentReport.CourseCode</h4>
                <div class="report-actions">
                    <button class="btn btn-secondary btn-sm" @onclick="ClearReport">
                        <i class="bi bi-x-circle me-1"></i>
                        Clear Report
                    </button>
                    <button class="btn btn-success btn-sm" @onclick="ExportReportAsync">
                        <i class="bi bi-download me-1"></i>
                        Export (PDF - Coming Soon)
                    </button>
                </div>
            </div>

            <!-- Report Summary -->
            <div class="report-summary">
                <div class="summary-grid">
                    <div class="summary-card">
                        <div class="summary-value">@currentReport.TotalStudentsEnrolled</div>
                        <div class="summary-label">Total Students</div>
                    </div>
                    <div class="summary-card">
                        <div class="summary-value">@currentReport.TotalSessions</div>
                        <div class="summary-label">Total Sessions</div>
                    </div>
                    <div class="summary-card">
                        <div class="summary-value">@currentReport.AverageAttendancePercentage%</div>
                        <div class="summary-label">Average Attendance</div>
                    </div>
                    <div class="summary-card">
                        <div class="summary-value">@currentReport.StudentsWithPerfectAttendance</div>
                        <div class="summary-label">Perfect Attendance</div>
                    </div>
                    <div class="summary-card">
                        <div class="summary-value">@currentReport.StudentsWithPoorAttendance</div>
                        <div class="summary-label">Poor Attendance (&lt;75%)</div>
                    </div>
                </div>
            </div>

            <!-- Student Details Table -->
            <div class="student-details">
                <h5>Student Attendance Details</h5>
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>Matric Number</th>
                                <th>Level</th>
                                <th>Present</th>
                                <th>Absent</th>
                                <th>Attendance %</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var student in currentReport.StudentReports.OrderBy(s => s.MatricNumber))
                            {
                                <tr>
                                    <td>@student.MatricNumber</td>
                                    <td>
                                        <span class="badge bg-info">@student.StudentLevel</span>
                                    </td>
                                    <td>
                                        <span class="badge bg-success">@student.TotalPresent</span>
                                    </td>
                                    <td>
                                        <span class="badge bg-danger">@student.TotalAbsent</span>
                                    </td>
                                    <td>
                                        <span class="attendance-percentage @GetAttendanceClass(student.AttendancePercentage)">
                                            @student.AttendancePercentage%
                                        </span>
                                    </td>
                                    <td>
                                        @if (student.AttendancePercentage >= 90)
                                        {
                                            <span class="badge bg-success">Excellent</span>
                                        }
                                        else if (student.AttendancePercentage >= 75)
                                        {
                                            <span class="badge bg-warning">Good</span>
                                        }
                                        else if (student.AttendancePercentage >= 50)
                                        {
                                            <span class="badge bg-danger">Poor</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-dark">Critical</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Raw JSON Output -->
            <div class="json-section">
                <h5>
                    Raw Report Data (JSON)
                    <button class="btn btn-outline-secondary btn-sm ms-2" @onclick="CopyJsonToClipboard">
                        <i class="bi bi-clipboard me-1"></i>
                        Copy JSON
                    </button>
                </h5>
                <div class="json-container">
                    <pre class="json-content">@reportJson</pre>
                </div>
            </div>
        </div>
    }

    <!-- Loading State -->
    @if (isLoading && !showReport)
    {
        <div class="loading-section">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-2">Generating attendance report...</p>
        </div>
    }
</div>

@code {
    private string GetAttendanceClass(double percentage)
    {
        return percentage switch
        {
            >= 90 => "text-success fw-bold",
            >= 75 => "text-warning fw-bold",
            >= 50 => "text-danger fw-bold",
            _ => "text-dark fw-bold"
        };
    }

    private async Task CopyJsonToClipboard()
    {
        try
        {
            await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", reportJson);
        }
        catch (Exception ex)
        {
            errorMessage = $"Failed to copy to clipboard: {ex.Message}";
        }
    }
}