@page "/Admin/ManageUsers"
@attribute [Authorize(Roles = "SuperiorAdmin")]
@layout SuperiorAdminLayout
@using AirCode.Components.SharedPrefabs.Cards
@using AirCode.Domain.Enums
@using AirCode.Layout.AdminLayout.Superior
@using AirCode.Components.SharedPrefabs.Buttons
@using AirCode.Components.SharedPrefabs.Spinner
@using Microsoft.AspNetCore.Authorization
<div class="container">
   
    <div class="admin-header">
        <h2 class="text-primary">User Management</h2>
        <CoolPrimaryButton Text="Create New Skeleton User" OnClick="ShowCreateUserModal" />
       
    </div>

    <!-- Tab Navigation -->
    <div class="nav-tabs-container">
        <ul class="nav nav-tabs">
            <li class="nav-item">
                <button class="nav-link @(activeTab == "students" ? "active" : "")" @onclick="() => SetActiveTab(STUDENT_ID)">
                    Students (@(_collections.Students?.Count ?? 0))
                </button>
            </li>
            <li class="nav-item">
                <button class="nav-link @(activeTab == "lecturers" ? "active" : "")" @onclick="() => SetActiveTab(LECTURER_ID)">
                    Lecturers (@(_collections.Lecturers?.Count ?? 0))
                </button>
            </li>
            <li class="nav-item">
                <button class="nav-link @(activeTab == "coursereps" ? "active" : "")" @onclick="() => SetActiveTab(COURSEREP_ID)">
                    Course Reps (@(_collections.CourseReps?.Count ?? 0))
                </button>
            </li>
        </ul>
    </div>

    @if (loading)
    {
    <LoadingSpinner Title="Loading Users" Subtitle="Please wait while we fetch user data..." />
    }
    else
    {
        <!-- Students Tab -->
        <div class="tab-content @(activeTab == "students" ? "active" : "")">
            @if (_collections.Students == null || !_collections.Students.Any())
            {
                <div class="empty-state">
                    <i class="fas fa-user-graduate fa-3x"></i>
                    <p>No student skeleton users found. Create one to get started.</p>
                </div>
            }
            else
            {
                <div class="user-list">
                    @foreach (var student in GetPagedItems(_collections.Students, _paginationState.StudentsCurrentPage))
                    {
                        <div class="@GetStatusClass(student)">
                            <div class="user-card-header">
                                <div class="user-info-section">
                                    <div class="user-id">@student.MatricNumber</div>
                                    <div class="user-type">Level @student.Level</div>
                                </div>
                                <div class="settings-icon">
                                    <button class="btn-settings" @onclick="() => ShowUserManagementModal(student, STUDENT_ID)" title="Manage User">
                                        @((MarkupString)settingsIcon)
                                    </button>
                                </div>
                            </div>
                            <div class="user-card-body">
                                <div class="user-details">
                                    <div class="detail-row">
                                        <span class="detail-label">Level:</span>
                                        <span class="detail-value">@student.Level</span>
                                    </div>
                                    <div class="detail-row">
                                        <span class="detail-label">Status:</span>
                                        <span class="detail-value @GetUserStatusClass(student.IsCurrentlyInUse, student.Suspension.IsSuspended)">
                                            @GetUserStatusText(student.IsCurrentlyInUse, student.Suspension.IsSuspended)
                                        </span>
                                    </div>
                                    @if (!string.IsNullOrEmpty(student.CurrentUserId))
                                    {
                                        <div class="detail-row">
                                            <span class="detail-label">User ID:</span>
                                            <span class="detail-value">@student.CurrentUserId</span>
                                        </div>
                                    }
                                    @if (student.Suspension.IsSuspended)
                                    {
                                        <div class="detail-row">
                                            <span class="detail-label">Suspended:</span>
                                            <span class="detail-value text-danger">@student.Suspension.CurrentSuspensionReason</span>
                                        </div>
                                    }
                                </div>
                            </div>
                            <div class="user-card-footer">
                                <button class="btn btn-danger" @onclick="() => ShowDeleteUserModal(student, STUDENT_ID)">
                                    <i class="fas fa-trash"></i> Delete
                                </button>
                                <button class="btn btn-secondary" @onclick="() => CopyToClipboard(student.MatricNumber)">
                                    <i class="fas fa-copy"></i> Copy
                                </button>
                            </div>
                        </div>
                    }
                </div>

                <!-- Pagination for Students -->
                @if (_collections.Students.Count > ITEMS_PER_PAGE)
                {
                    <div class="pagination-container">
                        <nav>
                            <ul class="pagination justify-content-center">
                                @for (int i = 1; i <= GetTotalPages(_collections.Students.Count); i++)
                                {
                                    <li class="page-item @(_paginationState.StudentsCurrentPage == i ? "active" : "")">
                                        <button class="page-link" @onclick="() => NavigateToPage(STUDENT_ID, i)">@i</button>
                                    </li>
                                }
                            </ul>
                        </nav>
                    </div>
                }
            }
        </div>

        <!-- Lecturers Tab -->
        <div class="tab-content @(activeTab == "lecturers" ? "active" : "")">
            @if (_collections.Lecturers == null || !_collections.Lecturers.Any())
            {
                <div class="empty-state">
                    <i class="fas fa-chalkboard-teacher fa-3x"></i>
                    <p>No lecturer skeleton users found. Create one to get started.</p>
                </div>
            }
            else
            {
                <div class="user-list">
                    @foreach (var lecturer in GetPagedItems(_collections.Lecturers, _paginationState.LecturersCurrentPage))
                    {
                        <div class="user-card @(lecturer.Suspension.IsSuspended ? "suspended" : "")">
                            <div class="user-card-header">
                                <div class="user-info-section">
                                    <div class="user-id">@lecturer.LecturerId</div>
                                    <div class="user-type">Lecturer</div>
                                </div>
                                <div class="settings-icon">
                                    <button class="btn-settings" @onclick="() => ShowUserManagementModal(lecturer, LECTURER_ID)" title="Manage User">
                                        @((MarkupString)settingsIcon)
                                    </button>
                                </div>
                            </div>
                            <div class="user-card-body">
                                <div class="user-details">
                                    <div class="detail-row">
                                        <span class="detail-label">Admin ID:</span>
                                        <span class="detail-value admin-id-text">@lecturer.AdminId</span>
                                    </div>
                                    <div class="detail-row">
                                        <span class="detail-label">Usage:</span>
                                        <span class="detail-value">@lecturer.CurrentUsage/@lecturer.MaxUsage</span>
                                        <button class="btn btn-sm btn-outline-primary" @onclick="() => ShowMaxUsageModal(lecturer, LECTURER_ID)">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                    </div>
                                    @if (lecturer.Suspension.IsSuspended)
                                    {
                                        <div class="detail-row">
                                            <span class="detail-label">Suspended:</span>
                                            <span class="detail-value text-danger">@lecturer.Suspension.CurrentSuspensionReason</span>
                                        </div>
                                    }
                                </div>

                                @if (lecturer.UserIds.Any())
                                {
                                    <div class="assigned-users">
                                        <h6>Assigned Users:</h6>
                                        <ul class="user-list-compact">
                                            @foreach (var userId in lecturer.UserIds)
                                            {
                                                <li class="user-item-compact">
                                                    <span class="user-id-compact">@userId</span>
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                }
                            </div>
                            <div class="user-card-footer">
                                <button class="btn btn-danger" @onclick="() => ShowDeleteUserModal(lecturer, LECTURER_ID)">
                                    <i class="fas fa-trash"></i> Delete
                                </button>
                                <button class="btn btn-secondary" @onclick="() => CopyToClipboard(lecturer.AdminId)">
                                    <i class="fas fa-copy"></i> Copy Admin ID
                                </button>
                            </div>
                        </div>
                    }
                </div>

                <!-- Pagination for Lecturers -->
                @if (_collections.Lecturers.Count > ITEMS_PER_PAGE)
                {
                    <div class="pagination-container">
                        <nav>
                            <ul class="pagination justify-content-center">
                                @for (int i = 1; i <= GetTotalPages(_collections.Lecturers.Count); i++)
                                {
                                    <li class="page-item @(_paginationState.LecturersCurrentPage == i ? "active" : "")">
                                        <button class="page-link" @onclick="() => NavigateToPage(LECTURER_ID, i)">@i</button>
                                    </li>
                                }
                            </ul>
                        </nav>
                    </div>
                }
            }
        </div>

        <!-- Course Reps Tab -->
        <div class="tab-content @(activeTab == "coursereps" ? "active" : "")">
            @if (_collections.CourseReps == null || !_collections.CourseReps.Any())
            {
                <div class="empty-state">
                    <i class="fas fa-users fa-3x"></i>
                    <p>No course rep skeleton users found. Create one to get started.</p>
                </div>
            }
            else
            {
                <div class="user-list">
                    @foreach (var courseRep in GetPagedItems(_collections.CourseReps, _paginationState.CourseRepsCurrentPage))
                    {
                        <div class="user-card @(courseRep.StudentInfo.IsCurrentlyInUse ? "in-use" : "") @(courseRep.AdminInfo.Suspension.IsSuspended ? "suspended" : "")">
                            <div class="user-card-header">
                                <div class="user-info-section">
                                    <div class="user-id">@courseRep.StudentInfo.MatricNumber</div>
                                    <div class="user-type">Course Rep - Level @courseRep.StudentInfo.Level</div>
                                </div>
                                <div class="settings-icon">
                                    <button class="btn-settings" @onclick="() => ShowUserManagementModal(courseRep, COURSEREP_ID)" title="Manage User">
                                        @((MarkupString)settingsIcon)
                                    </button>
                                </div>
                            </div>
                            <div class="user-card-body">
                                <div class="user-details">
                                    <div class="detail-row">
                                        <span class="detail-label">Admin ID:</span>
                                        <span class="detail-value admin-id-text">@courseRep.AdminInfo.AdminId</span>
                                    </div>
                                    <div class="detail-row">
                                        <span class="detail-label">Usage:</span>
                                        <span class="detail-value">@courseRep.AdminInfo.CurrentUsage/@courseRep.AdminInfo.MaxUsage</span>
                                        <button class="btn btn-sm btn-outline-primary" @onclick="() => ShowMaxUsageModal(courseRep.AdminInfo, COURSEREP_ID)">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                    </div>
                                    <div class="detail-row">
                                        <span class="detail-label">Student Status:</span>
                                        <span class="detail-value @GetUserStatusClass(courseRep.StudentInfo.IsCurrentlyInUse, courseRep.AdminInfo.Suspension.IsSuspended)">
                                            @GetUserStatusText(courseRep.StudentInfo.IsCurrentlyInUse, courseRep.AdminInfo.Suspension.IsSuspended)
                                        </span>
                                    </div>
                                    @if (courseRep.AdminInfo.Suspension.IsSuspended)
                                    {
                                        <div class="detail-row">
                                            <span class="detail-label">Suspended:</span>
                                            <span class="detail-value text-danger">@courseRep.AdminInfo.Suspension.CurrentSuspensionReason</span>
                                        </div>
                                    }
                                </div>

                                @if (courseRep.AdminInfo.UserIds.Any())
                                {
                                    <div class="assigned-users">
                                        <h6>Assigned Admin Users:</h6>
                                        <ul class="user-list-compact">
                                            @foreach (var userId in courseRep.AdminInfo.UserIds)
                                            {
                                                <li class="user-item-compact">
                                                    <span class="user-id-compact">@userId</span>
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                }
                            </div>
                            <div class="user-card-footer">
                                <button class="btn btn-danger" @onclick="() => ShowDeleteUserModal(courseRep, COURSEREP_ID)">
                                    <i class="fas fa-trash"></i> Delete
                                </button>
                                <button class="btn btn-secondary" @onclick="() => CopyToClipboard(courseRep.AdminInfo.AdminId)">
                                    <i class="fas fa-copy"></i> Copy Admin ID
                                </button>
                            </div>
                        </div>
                    }
                </div>

                <!-- Pagination for Course Reps -->
                @if (_collections.CourseReps.Count > ITEMS_PER_PAGE)
                {
                    <div class="pagination-container">
                        <nav>
                            <ul class="pagination justify-content-center">
                                @for (int i = 1; i <= GetTotalPages(_collections.CourseReps.Count); i++)
                                {
                                    <li class="page-item @(_paginationState.CourseRepsCurrentPage == i ? "active" : "")">
                                        <button class="page-link" @onclick="() => NavigateToPage(COURSEREP_ID, i)">@i</button>
                                    </li>
                                }
                            </ul>
                        </nav>
                    </div>
                }
            }
        </div>
    }
</div>

<!-- Create User Modal -->
<div id="create-modal-@_createModalId" class="modal-overlay @(showCreateModal ? "visible" : "")" @onclick="HandleCreateModalBackdrop">
    <div class="modal-content" @onclick:stopPropagation="true">
        <div class="modal-header">
            <h5 class="modal-title">Create New Skeleton User</h5>
            <button type="button" class="btn-close" @onclick="CloseModals"></button>
        </div>
        <div class="modal-body">
            <div class="form-group mb-3">
                <label for="userType">User Type</label>
                <select id="userType" class="form-control" @bind="newUserType" @bind:event="onchange">
                    <option value="Student">Student</option>
                    <option value="Lecturer">Lecturer</option>
                    <option value="CourseRep">Course Rep</option>
                </select>
            </div>

            @if (newUserType == "Student" || newUserType == "CourseRep")
            {
                <div class="form-group mb-3">
                    <label for="matricNumber">Matriculation Number</label>
                    <input type="text" id="matricNumber" class="form-control" @bind="newMatricNumber"
                           placeholder="e.g., U21CYS1083" />
                </div>
                <div class="form-group mb-3">
                    <label for="level">Level</label>
                    <select id="level" class="form-control" @bind="newLevel">
                        <option value="100">100</option>
                        <option value="200">200</option>
                        <option value="300">300</option>
                        <option value="400">400</option>
                        <option value="500">500</option>
                    </select>
                </div>
            }

            @if (newUserType == "Lecturer" || newUserType == "CourseRep")
            {
                <div class="form-group mb-3">
                    <label for="maxUsage">Maximum Usage</label>
                    <input type="number" id="maxUsage" class="form-control" @bind="newMaxUsage"
                           min="1" max="@(newUserType == "Lecturer" ? "1" : "2")"
                           disabled="@(newUserType == "Lecturer")" />
                    <small class="form-text text-muted">
                        @(newUserType == "Lecturer" ? "Lecturers have a fixed maximum of 1 user" : "Course Reps can have up to 2 users")
                    </small>
                </div>
            }
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-outline-secondary" @onclick="CloseModals">Cancel</button>
            <CoolPrimaryButton Text="Create"
                               IsLoading="@loading"
                               OnClick="CreateSkeletonUser"
                               IsDisabled="@loading" />
        </div>
    </div>
</div>

<!-- User Management Modal -->
<div id="user-management-modal-@_userManagementModalId" class="modal-overlay @(showUserManagementModal ? "visible" : "")" @onclick="HandleUserManagementBackdrop">
    <div class="modal-content" @onclick:stopPropagation="true">
        <div class="modal-header">
            <h5 class="modal-title">Manage User</h5>
            <button type="button" class="btn-close" @onclick="CloseModals"></button>
        </div>
        <div class="modal-body">
            <div class="user-management-options">
                @if (HasAssignedUsers())
                {
                    <button class="btn btn-outline-danger mb-3" @onclick="ShowRemoveCurrentUserSection">
                        <i class="fas fa-user-minus"></i> Remove Current User
                    </button>
                }
                <button class="btn btn-outline-warning" @onclick="ShowSuspendUserSection">
                    <i class="fas fa-ban"></i> @(IsUserSuspended() ? "Update Suspension" : "Suspend User")
                </button>
            </div>

            @if (showRemoveUserSection)
            {
                <div class="remove-user-section mt-4">
                    <h6>Remove Assigned User</h6>
                    <div class="alert alert-warning">
                        This will unassign the current user from this skeleton account.
                    </div>
                    <div class="text-right">
                        <button class="btn btn-outline-secondary me-2" @onclick="HideAllSections">Cancel</button>
                        <CoolPrimaryButton Text="Remove User"
                                           Class="btn-danger-custom"
                                           OnClick="RemoveCurrentUser" />
                    </div>
                </div>
            }

            @if (showSuspendUserSection)
            {
                <div class="suspend-user-section mt-4">
                    <h6>@(IsUserSuspended() ? "Update Suspension" : "Suspend User")</h6>
                    <div class="form-group mb-3">
                        <label for="suspensionReason">Reason</label>
                        <textarea id="suspensionReason" class="form-control" @bind="suspensionReason"
                                  placeholder="Enter reason for suspension" rows="3"></textarea>
                    </div>
                    <div class="form-group mb-3">
                        <label for="suspensionDuration">Duration (hours)</label>
                        <input type="number" id="suspensionDuration" class="form-control" @bind="suspensionDurationHours"
                               min="1" max="8760" placeholder="24" />
                    </div>
                    <div class="text-right">
                        <button class="btn btn-outline-secondary me-2" @onclick="HideAllSections">Cancel</button>
                        <CoolPrimaryButton Text="@(IsUserSuspended() ? "Update Suspension" : "Suspend User")"
                                           Class="btn-warning-custom"
                                           OnClick="SuspendUser" />
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Max Usage Modal -->
<div id="max-usage-modal-@_maxUsageModalId" class="modal-overlay @(showMaxUsageModal ? "visible" : "")" @onclick="HandleMaxUsageBackdrop">
    <div class="modal-content" @onclick:stopPropagation="true">
        <div class="modal-header">
            <h5 class="modal-title">Update Maximum Usage</h5>
            <button type="button" class="btn-close" @onclick="CloseModals"></button>
        </div>
        <div class="modal-body">
            <div class="form-group">
                <label for="updateMaxUsage">Maximum Usage</label>
                <input type="number" id="updateMaxUsage" class="form-control" @bind="updateMaxUsage"
                       min="1" max="@(selectedUserType == "lecturer" ? "1" : "2")" />
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-outline-secondary" @onclick="CloseModals">Cancel</button>
            <CoolPrimaryButton Text="Update"
                               OnClick="UpdateMaxUsage" />
        </div>
    </div>
</div>
<!-- Confirmation Delete Modal -->
@if (showConfirmDeleteModal)
{
    <div class="modal-overlay visible">
        <div class="modal-content confirmation-modal" @onclick:stopPropagation="true">
            <div class="modal-header">
                <h5 class="modal-title text-danger">
                    <i class="fas fa-exclamation-triangle"></i>
                    @confirmDeleteTitle
                </h5>
            </div>
            <div class="modal-body">
                <div class="alert alert-danger">
                    <strong>Warning:</strong> This action cannot be undone!
                </div>
                <p style="white-space: pre-line;">@confirmDeleteMessage</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" @onclick="() => showConfirmDeleteModal = false">Cancel</button>
                <CoolPrimaryButton Text="Delete Permanently"
                                   Icon="🗑️"
                                   Class="btn-danger-custom"
                                   IsLoading="@loading"
                                   OnClick="OnConfirmDelete"
                                   IsDisabled="@loading" />
            </div>
        </div>
    </div>
}
<!-- Delete User Modal -->
<div class="modal @(showDeleteModal ? "show" : "")" tabindex="-1" style="display: @(showDeleteModal ? "block" : "none")">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Skeleton User</h5>
                <button type="button" class="btn-close" @onclick="CloseModals"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this skeleton user?</p>
                <div class="alert alert-warning">
                    <strong>Warning:</strong> This action cannot be undone. This will permanently remove the skeleton user from the system.
                    @if (HasAuth0UserId())
                    {
                       
                    }
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" @onclick="CloseModals">Cancel</button>
                <CoolPrimaryButton Text="Delete"
                                   Class="btn-danger-custom"
                                   OnClick="DeleteSkeletonUser" />
            </div>
        </div>
    </div>
</div>

<!-- Remove User Modal -->
<div class="modal @(showRemoveUserModal ? "show" : "")" tabindex="-1" style="display: @(showRemoveUserModal ? "block" : "none")">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Remove Assigned User</h5>
                <button type="button" class="btn-close" @onclick="CloseModals"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to remove this assigned user?</p>
                @if (!string.IsNullOrEmpty(selectedAssignedUserId))
                {
                    <div class="alert alert-info">
                        <strong>User ID:</strong> @selectedAssignedUserId
                    </div>
                }
                <div class="alert alert-warning">
                    <strong>Note:</strong> This will unassign the user from this skeleton account, making the skeleton available for new assignments.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" @onclick="CloseModals">Cancel</button>
                <CoolPrimaryButton Text="Remove"
                                   Class="btn-danger-custom"
                                   OnClick="RemoveAssignedUser" />
            </div>
        </div>
    </div>
</div>
<!-- Notification component -->
<NotificationComponent @ref="notificationComponent"
                       Position="NotificationPosition.TopRight"
                       AutoDismissTime="3000"
                       ShowProgressBar="true"
                       ShowCloseButton="true"
                       PauseOnHover="true" />
<!-- Modal backdrop -->
@if (showCreateModal || showMaxUsageModal || showDeleteModal || showRemoveUserModal || showUserManagementModal)
{
    <div class="modal-backdrop fade show"></div>
}