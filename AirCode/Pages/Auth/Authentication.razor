@page "/authentication/{action}"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.Extensions.Configuration
@using AirCode.Services.Auth

@inject NavigationManager Navigation
@inject IConfiguration Configuration
@inject IAuthService AuthService

<div class="auth-container">
    <RemoteAuthenticatorView Action="@Action" OnLogInSucceeded="HandleLoginSuccess" OnLogOutSucceeded="HandleLogoutSuccess">
        <LoggingIn>
            <div class="auth-content">
                <div class="auth-status">
                    <div class="auth-icon">
                        <svg fill="currentColor" viewBox="0 0 24 24">
                            <path d="M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4z"/>
                        </svg>
                    </div>
                    <h2 class="auth-title">Connecting to AirCode</h2>
                    <p class="auth-subtitle">Redirecting to secure authentication...</p>
                    <div class="auth-spinner"></div>
                </div>
            </div>
        </LoggingIn>
        <CompletingLoggingIn>
            <div class="auth-content">
                <div class="auth-status">
                    <div class="auth-icon">
                        <svg fill="currentColor" viewBox="0 0 24 24">
                            <path d="M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z"/>
                        </svg>
                    </div>
                    <h2 class="auth-title">Authentication Successful</h2>
                    <p class="auth-subtitle">Completing login process and setting up your session...</p>
                    <div class="auth-spinner"></div>
                </div>
            </div>
        </CompletingLoggingIn>
        <LogOut>
            <div class="auth-content">
                <div class="auth-status">
                    <div class="auth-icon">
                        <svg fill="currentColor" viewBox="0 0 24 24">
                            <path d="M17,7L15.59,8.41L18.17,11H8V13H18.17L15.59,15.59L17,17L22,12L17,7M4,5H12V3H4C2.89,3 2,3.89 2,5V19A2,2 0 0,0 4,21H12V19H4V5Z"/>
                        </svg>
                    </div>
                    <h2 class="auth-title">Signing out...</h2>
                    <p class="auth-subtitle">Please wait while we complete the logout process.</p>
                    <div class="auth-spinner"></div>
                </div>
            </div>
        </LogOut>
        <CompletingLogOut>
            <div class="auth-content">
                <div class="auth-status">
                    <div class="auth-icon">
                        <svg fill="currentColor" viewBox="0 0 24 24">
                            <path d="M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z"/>
                        </svg>
                    </div>
                    <h2 class="auth-title">Logged out successfully</h2>
                    <p class="auth-subtitle">Redirecting to home page...</p>
                    <div class="auth-spinner"></div>
                </div>
            </div>
        </CompletingLogOut>
    </RemoteAuthenticatorView>
</div>

@code{
    [Parameter] public string Action { get; set; }
    
    private async Task HandleLoginSuccess(RemoteAuthenticationState state)
    {
        try
        {
            // Log successful authentication
            await AuthService.LogAuthenticationMessageAsync("Authentication successful!");
            
            // Process the login and navigate to appropriate page based on role
            // This is delegated to the AuthService to keep this component clean
            await AuthService.ProcessSuccessfulLoginAsync();
        }
        catch (Exception ex)
        {
            await AuthService.LogAuthenticationMessageAsync($"Unhandled exception: {ex.Message}");
            Navigation.NavigateTo("/", forceLoad: false);
        }
    }

    private void HandleLogoutSuccess(RemoteAuthenticationState state)
    {
        // Navigate to home page after successful logout
        Navigation.NavigateTo("/", forceLoad: true);
    }
}