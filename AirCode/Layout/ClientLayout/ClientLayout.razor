@* Enhanced ClientLayout.razor with profile navigation *@
@namespace AirCode.Layout.ClientLayout
@using Blazored.Toast
@using Blazored.Toast.Configuration
@inherits LayoutComponentBase
@inject AirCode.Services.VisualElements.ISvgIconService SvgIconService
@inject AirCode.Services.Auth.IAuthService AuthService
@inject NavigationManager NavigationManager

<div class="client-layout">
    <div class="main-content">
        <BlazoredToasts Position="ToastPosition.TopRight"
                        Timeout="5"
                        IconType="IconType.FontAwesome"
                        SuccessClass="success-toast"
                        InfoClass="info-toast"
                        WarningClass="warning-toast"
                        ErrorClass="error-toast"
                        ShowProgressBar="true" />
        <div class="content-top">
            <div class="header-left">
                <h2>AirCode</h2>
            </div>
            <div class="header-right">
                <div class="profile-button" @onclick="NavigateToProfile">
                    @if (!string.IsNullOrEmpty(userPictureUrl))
                    {
                        <img src="@userPictureUrl" alt="Profile" class="profile-image" @onerror="HandleImageError"/>
                    }
                    else if (!string.IsNullOrEmpty(userIconSvg))
                    {
                        @((MarkupString)userIconSvg)
                    }
                    else
                    {
                        <i class="oi oi-person" style="font-size: 20px;"></i>
                    }
                </div>
            </div>
        </div>
        <div class="content-bottom">
            @Body
            
            <!-- Backdrop scoped to content-bottom only -->
            <GlobalBackdrop />
        </div>
    </div>
    <ClientNavMenu />
</div>

@code {
    private string userIconSvg = string.Empty;
    private string userPictureUrl = string.Empty;
    private bool imageLoadFailed = false;
    
    protected override async Task OnInitializedAsync()
    {
        await LoadUserProfileAsync();
    }

    private async Task LoadUserProfileAsync()
    {
        try
        {
            // First try to get user picture from Auth0/Gravatar
            userPictureUrl = await AuthService.GetUserPictureAsync();
            
            if (string.IsNullOrEmpty(userPictureUrl))
            {
                // Fall back to SVG icon service
                userIconSvg = await SvgIconService.GetCrowGuyIconAsync();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading user profile: {ex.Message}");
            // Final fallback to default icon
            userIconSvg = string.Empty;
            userPictureUrl = string.Empty;
        }
    }

    private async Task HandleImageError()
    {
        if (!imageLoadFailed)
        {
            imageLoadFailed = true;
            userPictureUrl = string.Empty;
            
            // Try to load SVG fallback
            try
            {
                userIconSvg = await SvgIconService.GetCrowGuyIconAsync();
            }
            catch
            {
                userIconSvg = string.Empty;
            }
            
            StateHasChanged();
        }
    }
    
    private void NavigateToProfile()
    {
        NavigationManager.NavigateTo("Client/Profile");
    }
}